/**
 * $RCSfile: ConfigAPIInstanceOrMember.idl,v $
 * $Revision: 1.2 $
 * $Date: 2007/09/27 23:25:57 $
 */

/**
 * @file
 * The interface definition for the ConfigAPIInstanceOrMember server.
 * @ingroup Configuration
 *
 * @author Michael Deck
 * @par Address:
 * JPL m/s 171-113, Pasadena California 91109
 * @par Copyright:
 * (c) 2002, California Institute of Technology, Pasadena CA
 * @version $Revision: 1.2 $
 * @date $Date: 2007/09/27 23:25:57 $
 */

#ifndef INC_CONFIGSERVER_API_INSTANCE_OR_MEMBER_IDL
#define INC_CONFIGSERVER_API_INSTANCE_OR_MEMBER_IDL
#pragma prefix "rtc.jpl.nasa.gov"

#include "Name.idl"
#include "Configuration.idl"
#include "ConfigAPICommon.idl"
#include "ConfigAPIEnums.idl"
#include "ConfigAPIExceptions.idl"
#include "ConfigAPIStructs.idl"
#include "ConfigAPIBase.idl"
#include <CosEventComm.idl>
#include <CosEventChannelAdmin.idl>

module RTC {
  module Configuration {
    /**
     * @addtogroup Configuration
     * @{
     */

    /**
     * Defines operations mostly having to do with instances and
     * instance-members.
     */
    interface ConfigAPIInstanceOrMember
    {
      /**
       * Adds an instance to the repository in the workspace provided.
       * <em>May NOT be used for adding a member to an instance (which is only
       * done by changing the instance TYPE.</em> Throws an exception if
       * newInstanceOrMember.container is not null or if
       * newInstanceOrMember.type is null. Instance is added on
       * newInstanceOrMember.branch unless it is null, in which case it is added
       * on newInstanceOrMember.module.branch. If both are null, exception.
       * <p>Events: {InstanceAdded | InstanceChanged}
       *
       * @param  workspaceName the workspace to use
       * @param  newInstanceOrMember the instance to add
       * @param  isRecursiveSelection if you want to recursively set selections
       * of members based on selection of newInstanceOrMember
       * @param  isRecursiveLink if you want to recursively link
       * members based on link target of newInstanceOrMember
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void addInstance
        (in string workspaceName, in ConfigInstanceStruct newInstanceOrMember,
         in boolean isRecursiveSelection, in boolean isRecursiveLink)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Remove an instance and all contained members in the workspace.
       * Reset all links-to to default.
       * <p>Events: {{InstanceModified} InstanceDeleted}
       *
       * @param  workspaceName name of the workspace to delete class or member
       * from
       * @param  toDeleteID instance to delete
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void deleteInstance
        (in string workspaceName, in InstanceOrMemberIDStruct toDeleteID)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Get array of fully-attributed (without extended status) instance
       * members in instance.
       *
       * @param  workspaceName workspace to look for instance and members in
       * @param  instanceID instance to look for members in
       * @return array of fully-attributed (without extended status) members in
       * instance
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      InstanceList getInstanceMembersInInstanceOrMember
        (in string workspaceName, in InstanceOrMemberIDStruct instanceID)
        raises (ConfigAPIException, TaskKilledException);

      /**
       * Get fully-attributed instances and members that instantiate the
       * requested class or one of its subtypes.
       *
       * @param  workspaceName name of workspace to look for class and instances
       * in
       * @param  classID class to lookup instances of
       * @return  fully-attributed instances and members that instantiate the
       * requested class
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      InstanceList getInstanceMembersOfClass
      (in string workspaceName, in ClassOrMemberIDStruct classID)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Gets the fully-attributed info of the instance or member but not
       * extended status. Attributes are not necessarily fully-attributed.
       *
       * @param  workspaceName name of the workspace to lookup instance or
       * member in
       * @param  instanceID instance or member to lookup
       * @return  fully-attributed instance or member struct without extended
       * status
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      InstanceOrMemberInfoStruct getInstanceOrMemberAttributes
        (in string workspaceName, in InstanceOrMemberIDStruct instanceID)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Get the extended status of the instance or member.
       *
       * @param workspaceName name of the workspace to look for instance or
       * member in
       * @param instanceOrMemberID ID of instance or member to lookup extended
       * status
       * @return extended status
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      ItemRevisionStatus getInstanceOrMemberExtendedStatus
        (in string workspaceName, in InstanceOrMemberIDStruct instanceOrMemberID)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Get the log records associated with the instance or member.
       *
       * @param workspaceName name of the workspace to look for instance or
       * member in
       * @param toLookup ID of instance or member to lookup
       * @return sequence of ItemLogInfoStruct containing log records for this
       * instance or member
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      ItemLogInfoList getInstanceOrMemberLogInfo (in string workspaceName, in InstanceOrMemberIDStruct toLookup)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Return the collection of items, fully-qualified without extended
       * status, that are directly dependent on the instance or member, such
       * as members of the instance, children or instances of the instance or
       * member.
       *
       * @param workspaceName name of the workspace to lookup instance or
       * member and references in
       * @param toLookup identifier of the instance or member to lookup
       * @return collection of fully-qualified (without extended status) items
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      ItemList getItemsDependentOnInstanceOrMember (in string workspaceName, in InstanceOrMemberIDStruct toLookup)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Get all the modules that toLookup depends on, directly or indirectly.
       *
       * @param workspaceName name of workspace to look in
       * @param toLookup name of class or member to get dependencies on
       * @return set of fully-attributed modules
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      ModuleList getModulesInstanceOrMemberDependsOn (in string workspaceName, in InstanceOrMemberIDStruct toLookup)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Return a sequence of fully-attributed items including everything that
       * refers to toLookup by instance link.
       *
       * @param workspaceName workspace to look for items in
       * @param toLookup item ID to get references to
       * @return sequence of fully-attributed items
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      ItemList getReferencesToInstanceOrMember (in string workspaceName, in InstanceOrMemberIDStruct toLookup)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Return sequence of fully-qualified instances which are the primitives
       * subordinate to (or identical to) toLookup, in "instance name" order
       * with direct children first, then indirect. Optionally "guess"
       * primitives (if no children, must be a primitive) or not (lookup type
       * to see if primitive). Optionally limit return to immediate children if
       * more primitives than some number.
       *
       * @param workspaceName name of workspace to lookup instance and
       * primitives in
       * @param toLookup instance to look for primitives of
       * @param guessPrimitives true to "guess" by lack of children, false to
       * ascertain type is primitive
       * @param limitSubordinates if more primitives than this number, return
       * only immediate child primitives
       * @return sequence of fully-qualified instances which are the primitives
       * subordinate to (or identical to) toLookup
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      InstanceList getSubordinatePrimitives
        (in string workspaceName, in InstanceOrMemberIDStruct toLookup,
         in boolean guessPrimitives, in long limitSubordinates)
        raises (ConfigAPIException, TaskKilledException);

      /**
       * Return true iff instance or member exists in workspace.
       *
       * @param  workspaceName name of workspace to look for instance or member
       * in
       * @param  instanceOrMemberID identifier of instance or member to lookup
       * @return true iff instance or member exists in workspace
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      boolean instanceOrMemberExists
        (in string workspaceName, in InstanceOrMemberIDStruct instanceOrMemberID)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Return an InstanceOrMemberIDStruct which corresponds to the full (V3
       * dotted format, starting with a module name) instance or member name
       * provided. Note this does NOT actually validate the name or check
       * whether it exists, it is purely syntax analysis.
       *
       * @param instanceOrMemberName
       * @return InstanceOrMemberIDStruct which corresponds to the full instance
       * or member name provided
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      InstanceOrMemberIDStruct makeConfigInstanceOrMemberFromInstanceName
        (in string instanceOrMemberName)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Modify the name of an instance in the workspace.
       *
       * This will touch every item directly dependent on the instance as well
       * as every item contained in this instance. This method cannot be used to
       * rename a member -- that can only be done through
       * modifyClassOrMemberName.
       * <p>Events: {InstanceAdded | InstanceChanged | InstanceDeleted}
       *
       * @param workspaceName workspace to find toModify in
       * @param toModify item to change
       * @param newValue new value of the attribute
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceName
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in string newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Using the fields in newValue, modify the instance or member indicated
       * in toModify. It is important to note that all of the user-modifiable
       * fields must be set -- if you leave comments null, for example, you'll
       * overwrite the comments in the database to null. For best results, get
       * current info from the database first, modify selected fields, then call
       * this method.
       * <p>Events: {InstanceChanged} InstanceRenamed
       *
       * @param workspaceName name of workspace to look for instance or member
       * in
       * @param toModify ID of instance or member to modify
       * @param newValue new instance with all user-modifiable fields set to
       * desired final values
       * @param recursiveSelection if the selection is now different and you
       * want to recursively change the selection of the children
       * @param leaveOverridesSelection to skip over children with an OVERRIDE
       * selection when recursively changing child selection
       * @param forceChangesSelection to apply the selection (possibly
       * recursively) even if not changed
       * @param recursiveLink if the link target is now different and you want
       * to recursively change the link target of the children
       * @param leaveOverridesLink to skip over children with an OVERRIDE
       * selection when recursively changing child link target
       * @param forceChangesLink to apply the link target (possibly recursively)
       * even if not changed
       * @param coerceValues set true if you want to force value strings to
       * conform to type, and just get a warning; false to fail if strings do
       * not conform
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMember
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in ConfigInstanceStruct newValue,
         in boolean recursiveSelection, in boolean leaveOverridesSelection, in boolean forceChangesSelection,
         in boolean recursiveLink, in boolean leaveOverridesLink, in boolean forceChangesLink,
         in boolean coerceValues)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Set the comments attribute of instance or member toModify to value
       * newValue. If making a instance non-instantiable, delete any instances
       * of instance in workspace.
       * <p>Events: InstanceChanged
       *
       * @param workspaceName workspace to find toModify in
       * @param toModify item to change
       * @param newValue new value of the attribute
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMemberComments
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in string newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Modify the link-target of instance or member toModify. Array-resizing
       * may cause addition or deletion of elements.
       * <p>Events: {InstanceAdded | InstanceChanged | InstanceDeleted}
       *
       * @param  workspaceName name of workspace to find instance or member in
       * @param  toModify instance or member to modify
       * @param  newValue new link target value as an "optional" instance or
       * member ID
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMemberLinkTarget
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in InstanceIDList newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Modify the override size of instance or member toModify. Array-resizing
       * may cause addition or deletion of elements.
       * <p>Events: {InstanceAdded | InstanceChanged | InstanceDeleted}
       *
       * @param  workspaceName name of workspace to find instance or member in
       * @param  toModify instance or member to modify
       * @param  newValue new override size value
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMemberOverrideSize
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in long newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Modify the override value of instance or member toModify. If there are
       * instances linked to this one, fire an InstanceChanged event for each of
       * them, recursively.
       * <p>Events: {InstanceChanged}
       *
       * @param  workspaceName name of workspace to find instance or member in
       * @param  toModify instance or member to modify
       * @param  newValue new override value
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMemberOverrideValue
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in AnyOrNull newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Modify the override value of instance or member toModify and set the
       * selection of toModify to override. If there are instances linked
       * to this one, fire an InstanceChanged event for each of them,
       * recursively. Return the properly stringified original value for saving.
       * <p>Events: {InstanceChanged}
       *
       * @param  workspaceName name of workspace to find instance or member in
       * @param  toModify instance or member to modify
       * @param  newValueAsString new override value
       * @return original value as string
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      string modifyInstanceValue
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in string newValueAsString)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Modify the selection of instance or member toModify. Array-resizing may
       * cause addition or deletion of elements.
       * <p>Events: {InstanceAdded | InstanceChanged | InstanceDeleted}
       *
       * @param  workspaceName name of workspace to find instance or member in
       * @param  toModify instance or member to modify
       * @param  newValue new selection value
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceOrMemberSelection
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in InstanceSelection newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * NO LONGER IMPLEMENTED!!!
       * Modify the type of an instance in the workspace. Retyping may add or
       * delete members. This method cannot be used to retype a member -- that
       * can only be done through modifyClassOrMemberType.
       * <p>Events: {InstanceAdded | InstanceChanged | InstanceDeleted}
       *
       * @param  workspaceName workspace to find toModify in
       * @param  toModify item to change
       * @param  newValue new value of the attribute
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void modifyInstanceType
        (in string workspaceName, in InstanceOrMemberIDStruct toModify, in ClassOrMemberIDStruct newValue)
          raises (ConfigAPIException, TaskKilledException);

      /**
       * Touch the item in the workspace, forcing a new revision if necessary
       * <p>Events: {*Changed}
       *
       * @param  workspaceName nonnull workspace name in which to find item
       * @param  itemToTouchID identifier of module to be touched
       * @param  recursive set true if you want to touch items dependent on
       * itemToTouchID, recursively
       * @throws ConfigAPIException on errors
       * @throws TaskKilledException if task stopped by user
       */
      void touchInstanceOrMember
        (in string workspaceName, in InstanceOrMemberIDStruct itemToTouchID, in boolean recursive)
          raises (ConfigAPIException, TaskKilledException);

    };
    /**
     * @}
     * end Configuration
     */
  };
};
#endif //INC_CONFIGSERVER_API_INSTANCE_OR_MEMBER_IDL
