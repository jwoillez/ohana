#ifndef INC_SEQ_TELEMETRY_IDL
#define INC_SEQ_TELEMETRY_IDL
//$Header: /usr/local/cvsroot/kroot/kss/if/krtc/idl/SeqTelemetry.idl,v 1.3 2001/10/30 00:43:37 intdev Exp $
//**********************************************************************
//
// Description: This is idl for sequencer telemetry items.
//              Note the telemetry is ether generated by
//		the epics SNR, TCL or anyother technology
//		we utilize.  Note this idl is based on
//              the FringeTracker.idl file.
//
// Author:      L. J. Reder (reder@huey.jpl.nasa.gov)
// File:        $RCSfile: SeqTelemetry.idl,v $
// Date:        $Date: 2001/10/30 00:43:37 $
//**********************************************************************
#include <RTCCore.idl>

#pragma prefix "keck.jpl.nasa.gov"


module SeqTelemetryModule {
  // Baaseline struct.
  struct Baseline {
	double blineE;		// Basline vector values and offset.
	double blineN;
	double blineUp;
	double blineOffset;
	};

  // Set of baselines.
  typedef sequence<Baseline> BASELINE_TELEMETRY;

  // State message type 

  enum STATE_MSG_TYPE {
	STC,	// State change message and indication.
	LOG,	// General error message.
	WRN,	// Warning message.
	FLT	// Fault message which stops sequencing.
	};

  // State struct.
  struct State {
	string sStateName;
	string sLastState;
	string sLogMsg;
	STATE_MSG_TYPE eType;
	short iStatus;
	};

  // Set of states.
  typedef sequence<State> STATE_TELEMETRY;

  // Telescope RA and Dec struct.
  struct TelRaDec {
	string tState;	// Telescope state
	double tRa;	// Current RA (hrs) and DEC (degs)
	double tDec;
	double tTargetRa; // Target RA (hrs) and DEC (degs)
	double tTargetDec;
	};

  // Set of RA and DEC from telescope.
  typedef sequence<TelRaDec> TELRADEC_TELEMETRY;

};

#endif // INC_SEQ_TELEMETRY_IDL
