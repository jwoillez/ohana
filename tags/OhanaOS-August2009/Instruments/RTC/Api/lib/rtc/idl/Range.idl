/* $Source: /usr/local/cvsroot/kroot/kss/if/rtc/idl/Range.idl,v $
 * $Id: Range.idl,v 1.2 2007/09/27 23:26:03 intdev Exp $
 * -*- Mode: c++ -*-
 */

/**
 * @file
 * Basic range/alarm definitions
 *
 * @author Richard Johnson
 * @par Address:
 * JPL m/s 171-113, Pasadena California 91109
 * @par Copyright:
 * (c) 2002, California Institute of Technology, Pasadena CA
 * @version $Revision: 1.2 $
 * @date $Date: 2007/09/27 23:26:03 $
 */

#ifndef INC_RTC_RANGE_IDL
#define INC_RTC_RANGE_IDL


module RTC {

  /**
   * Range structure for storing ranges of any data type.
   * The type of Min and Max should be the same.
   */
  struct Range {
    any Min; ///< Minimum value
    any Max; ///< Maximum value
  };

  /// Sequence of ranges
  typedef sequence<Range> RangeSequenceType;

  /**
   * An alarm is a value range + a severity level. The convention is that
   * 0 is most severe with decreasing severity as the number increases.
   */
  struct Alarm {
    RTC::Range Range; ///< Alarm range
    long lSeverity;   ///< Alarm severity
  };

  /// Sequence of alarms
  typedef sequence<Alarm> AlarmSequenceType;

};

#endif
